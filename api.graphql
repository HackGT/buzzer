# Proposed interface
# API gets 'msg' and 'medium'
# 

schema {
  query: Query
}

# Message, Mode: (TARGET, ANNOUNCE)
# - Announce:
#   - Facebook, Twitter, Slack @announcements, Live Site
# - Target:
#   - Email, Twilio, Slacking PMs
# message, group, and medium
# for each medium, we have a mapping to a group
# Email: - select user list via tags
# Mobile: - same thing as email
# Slack: - send to general with prepended/preformatted [TAG NAME]
#        - or direct PMs
# Tweet: No targetting - ( provide disclaimer )
# Push notification: - can we target? api tokens
type Query {
  send_message(message: String!, plugins: PluginMaster!): PluginReturn!
}

#
# enum StatusEnum {
#   SUCCESS
#   ERROR
#   NULL
# }

type Status { # corresponding to APIReturn
  error: Int!,
  debugInfo: String
}

input PluginMaster {
  facebook: FacebookConfig,
  live_site: LiveSiteConfig,
  twitter: TwitterConfig,
  slack: SlackConfig
}

type PluginReturn {
  email: Status,
  facebook: Status,
  live_site: Status,
  twitter: Status,
  slack: Status
}

# Below should be extracted to separate directory

input FacebookConfig {
  name: String!
}

input LiveSiteConfig {
  notification_type: String
}

input TwitterConfig {
  name: String!
}

# Remove when implemented
input SlackConfig {
  channel: String,
  channels: [String!]
}
